#data[0] - num - –ù–æ–º–µ—Ä –≤ —Ç–∞–±–ª–∏—Ü–µ
#data[1] - name - –ò–º—è –≤ —Ç–∞–±–ª–∏—Ü–µ
#data[2] - Rname - –†—É—Å—Å–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ
#data[3] - Lname - –õ–∞—Ç–∏–Ω—Å–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ
#data[4] - Ename - –ê–Ω–≥–ª–∏–π—Å–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ
#data[5] - Birth - –î–∞—Ç–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è
#data[6] - Eshell - –≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –æ–±–æ–ª–æ—á–∫–∞
#data[7] - Doxi - –°—Ç–µ–ø–µ–Ω—å –æ–∫–∏—Å–ª–µ–Ω–∏—è
#data[8] - Amass - –ê—Ç–æ–º–Ω–∞—è –º–∞—Å—Å–∞
#data[9] - density - –ü–ª–æ—Ç–Ω–æ—Å—Ç—å
#data[10] - Tmelting - –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –ø–ª–∞–≤–ª–µ–Ω–∏—è
#data[11] - boil - –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –∫–∏–ø–µ–Ω–∏—è

import flask
import logging
import telebot
import time
import os
import sqlite3
import finder
import keygen
from finder import elements_1
from OpenSSL import SSL
from telebot import types

os.chdir('/root/to/main.py')

class temps:
    onely = False
    sa = False
    search = False
    dR = True



TOKEN = 'Your Token'
WEBHOOK_HOST = 'Your Host'
WEBHOOK_PORT = 8443  # 443, 80, 88 or 8443 (port need to be 'open')
WEBHOOK_LISTEN = '0.0.0.0'  # In some VPS you may need to put here the IP addr
WEBHOOK_SSL_CERT = '/root/to/ssl/cert'  # Path to the ssl certificate
WEBHOOK_SSL_PRIV = '/root/to/ssl/priv' # Path to the ssl private key
WEBHOOK_URL_BASE = "https://%s:%s" % (WEBHOOK_HOST, WEBHOOK_PORT)
WEBHOOK_URL_PATH = "/%s/" % (TOKEN)


logger = telebot.logger

telebot.logger.setLevel(logging.INFO)


bot = telebot.TeleBot(TOKEN)


app = flask.Flask(__name__)



# Empty webserver index, return nothing, just http 200

@app.route('/', methods=['GET']) 
def index(): 
    return 'Test'


# Process webhook calls

@app.route(WEBHOOK_URL_PATH, methods=['POST'])

def webhook():
    if flask.request.headers.get('content-type') == 'application/json':
        json_string = flask.request.get_data().decode('utf-8')
        update = telebot.types.Update.de_json(json_string)
        bot.process_new_updates([update])
        return ' '





rate = []

admin = [219533807, 389810246, 343980577, 185091202]

data = {}

markup=types.ReplyKeyboardMarkup(resize_keyboard=True)


bot = telebot.TeleBot(TOKEN)
      
@bot.message_handler(commands=['start','help'])
def start(message):
       id = message.from_user.id
       if temps.onely == False:
           markup.add("–ü–æ–∏—Å–∫üîé")
           markup.add("–û –±–æ—Ç–µ")
           markup.add("–ö–æ–Ω—Ç–∞–∫—Ç—ãüìñ")
           temps.onely = True
           bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! —Å–ª–µ–¥–∏ –∑–∞ —Ö–æ–¥–æ–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª–µ @zChemistryBlog, –µ—Å–ª–∏ –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏? –∑–∞—Ö–æ–¥–∏ —Å—é–¥–∞ - @zChemistryGroup",reply_markup=markup)
       else:
           if message.from_user.username == None:
              username = '–ù–µ—Ç—É'
           else:
               username = '@'+message.from_user.username
           text = '–ù–æ–≤—ã–π —é–∑–µ—Ä!\n'+'–ü–µ—Ä–≤–æ–µ –∏–º—è: ' + message.from_user.first_name+'\n–Æ–∑–µ—Ä–Ω–µ–π–º: ' + username
           for x in range(0, len(admin)):
              bot.send_message(admin[x], text)
           bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! —Å–ª–µ–¥–∏ –∑–∞ —Ö–æ–¥–æ–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª–µ @zChemistryBlog, –µ—Å–ª–∏ –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏? –∑–∞—Ö–æ–¥–∏ —Å—é–¥–∞ - @zChemistryGroup",reply_markup=markup)


@bot.message_handler(commands=['myid'])
def whid(message):
      id = message.from_user.id
      bot.send_message(message.chat.id, id)

@bot.inline_handler(lambda query: len(query.query)>0)
def query_text(query):
    try:
        data = {}
        choice = query.query
        data = finder.find(choice)
        desc = '–ü–æ–∏—Å–∫: ' + data["name"]
        text = '–ü–æ–∏—Å–∫ –ø–æ: '+query.query+'\n\n*'+str(data["name"]) + ' (' + str(data["num"])+ ' –Ω–æ–º–µ—Ä –≤ —Ç–∞–±–ª–∏—Ü–µ)\n'+'*'+'–†—É—Å—Å–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: ' + '*'+ data["Rname"] + '*'+'\n–õ–∞—Ç–∏–Ω—Å–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: ' + '*'+data["Lname"]+'*' +'\n–ê–Ω–≥–ª–∏–π—Å–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: ' +'*'+ data["Ename"]+'*' +'\n–î–∞—Ç–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è: ' + '*' + str(data["Birth"]) +'*'+'\n–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –æ–±–æ–ª–æ—á–∫–∞: ' + '*'+data["Eshell"] +'*'+'\n–°—Ç–µ–ø–µ–Ω—å –æ–∫–∏—Å–ª–µ–Ω–∏—è: ' + '*' +data["Doxi"]+'*' +'\n–ê—Ç–æ–º–Ω–∞—è –º–∞—Å—Å–∞: ' +'*'+ data["Amass"] +' (–≥/–º–æ–ª—å)'+'*'+'\n–ü–ª–æ—Ç–Ω–æ—Å—Ç—å: ' + '*'+data["density"] + ' (–≥/—Å–º¬≥)'+'*'+'\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –ø–ª–∞–≤–ª–µ–Ω–∏—è: ' + '*'+data["Tmelting"] + '¬∞C' +'*'+'\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –∫–∏–ø–µ–Ω–∏—è: ' + '*'+data["boil"] + '¬∞C'+'*'
        r = types.InlineQueryResultArticle('1', desc, types.InputTextMessageContent(text, parse_mode="MARKDOWN"))
        bot.answer_inline_query(query.id, [r])
        rate.append(data["name"])
    except:
            er = '–ü–æ–∏—Å–∫ –ø–æ: ' + query.query + '\n\n–≠–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!'
            r2 = types.InlineQueryResultArticle(
            	    '2', title='–û—à–∏–±–∫–∞!',
            	    description='–≠–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!',
            	    input_message_content=types.InputTextMessageContent(er))
            bot.answer_inline_query(query.id, [r2])

@bot.message_handler(commands=['generate'])
def runKeyGen(message):
      id = message.from_user.id
      if id in admin:
          num = int(message.text.split(' ')[1])
          len = int(message.text.split(' ')[2])
          key = keygen.keyGenerator(len,num)
          bot.send_message(message.chat.id, key)    
      else:
          bot.send_message(message.chat.id, '–ù–µ—Ç –ø–æ–ª–Ω–æ–º–æ—á–∏–π!')

@bot.message_handler(commands=["rate"])
def rater(message):
     if message.from_user.id in admin:
        x = message.text.split(' ')[1]
        if x == 777:
            bot.send_message(message.chat.id, rate)
        data = finder.find(x)
        if data == None:
           bot.send_message(message.chat.id, '–¢–∞–∫–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –Ω–µ—Ç')
        else:
           y = rate.count(data["name"])
           text = data["name"] + ' - –∏—Å–∫–∞–ª–æ—Å—å ' + str(y) + ' —Ä–∞–∑'
           bot.send_message(message.chat.id, text)
     else:
        bot.send_message(message.chat.id, '–í—ã –Ω–µ —É–ø–æ–ª–Ω–æ–º–æ—á–µ–Ω—ã!')
 
@bot.message_handler(commands=["send"])
def sendAdmin(message):
    if message.from_user.id in admin:
        bot.send_message(message.chat.id, '–í–∞—à —Ç–µ–∫—Å—Ç: ')
        temps.sa = True
    else:
        bot.send_message(message.chat.id, '–í—ã –Ω–µ —É–ø–æ–ª–Ω–æ–º–æ—á–µ–Ω–Ω—ã')
      
@bot.message_handler(content_types=["text"])
def checkC(message):
      if message.text == '–ü–æ–∏—Å–∫üîé':
            bot.send_message(message.chat.id,'–í–≤–µ–¥–∏—Ç–µ –≠–ª–µ–º–µ–Ω—Ç: ')
            temps.search = True
              
      elif message.text == '–û –±–æ—Ç–µ':
             if temps.search == True:
                 bot.send_message(message.chat.id, '–ü–æ–∏—Å–∫ –æ—Ç–º–µ–Ω–µ–Ω!')
             bot.send_message(message.chat.id, '–ü–æ–º–æ—â–Ω–∏–∫ –ø–æ –•–∏–º–∏–∏, —Å –±–æ–ª—å—à–æ–π –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –ø–æ —Ö–∏–º–∏—á–µ—Å–∫–∏–º —ç–ª–µ–º–µ–Ω—Ç–∞–º - –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ –∫–∞–Ω–∞–ª—É –∏ —É–∑–Ω–∞–≤–∞–π –ø–µ—Ä–≤—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –ø–æ —Ö–æ–¥—É —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –±–æ—Ç–∞ @zChemistryBlog')
             temps.search = False  
      
      elif message.text == '–ö–æ–Ω—Ç–∞–∫—Ç—ãüìñ':
              if temps.search == True:
                 bot.send_message(message.chat.id, '–ü–æ–∏—Å–∫ –æ—Ç–º–µ–Ω–µ–Ω!')
              text = '–ì—Ä—É–ø–ø—ã: '+'<a href="https://t.me/joinchat/FzwIRkMaeoC3OjD2rGz_eg">–û–±—â–∞—è zChemistry</a>'+'\n'+'–ö–∞–Ω–∞–ª—ã: '+'<a href="t.me/zChemistryBlog">–ë–ª–æ–≥ –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞</a>'+'\n'+'–°–ø–∞—Å–∏–±–æ: '+'<a href="https://t.me/chatdmbot?start=shyrcoep7758">ChatDM</a>'
              bot.send_message(message.chat.id, text, parse_mode="HTML", disable_web_page_preview=True)
              
      elif temps.search == True:
              temps.search = False
              finds(message)
              
      elif temps.sa == True:
           temps.sa = False
           for x in range(0, len(admin)):
              bot.send_message(admin[x], message.text)
                           
def finds(message):     
          keyboard=types.InlineKeyboardMarkup()
          rateMe = types.InlineKeyboardButton(text="–û—Ü–µ–Ω–∏—Ç—å!", url="https://telegram.me/storebot?start=zChemistryBot")
          joinG = types.InlineKeyboardButton(text='–ì—Ä—É–ø–ø–∞!', url="t.me/zChemistryGroup")
          joinB = types.InlineKeyboardButton(text='–ö–∞–Ω–∞–ª!', url ="t.me/zChemistryBlog")
          keyboard.add(rateMe, joinG, joinB)

          choice = message.text
          data = finder.find(choice)
          if data == None:
             text = '–¢–∞–∫–æ–≥–æ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!'
             bot.send_message(message.chat.id, text)
          
          else:
             rate.append(data["name"])
             try: 
                photo = open(elements_1[choice]['/home/zchemistry/Chem/'+data["link"]], 'rb')
                bot.send_photo(message.chat.id, photo)
                photo.close()
             except Exception as error:
               print(error)
             text = '*'+str(data["name"]) + ' (' + str(data["num"])+ ' –Ω–æ–º–µ—Ä –≤ —Ç–∞–±–ª–∏—Ü–µ)\n'+'*'+'–†—É—Å—Å–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: ' + '*'+ data["Rname"] + '*'+'\n–õ–∞—Ç–∏–Ω—Å–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: ' + '*'+data["Lname"]+'*' +'\n–ê–Ω–≥–ª–∏–π—Å–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: ' +'*'+ data["Ename"]+'*' +'\n–î–∞—Ç–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è: ' + '*' + str(data["Birth"]) +'*'+'\n–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –æ–±–æ–ª–æ—á–∫–∞: ' + '*'+data["Eshell"] +'*'+'\n–°—Ç–µ–ø–µ–Ω—å –æ–∫–∏—Å–ª–µ–Ω–∏—è: ' + '*' +data["Doxi"]+'*' +'\n–ê—Ç–æ–º–Ω–∞—è –º–∞—Å—Å–∞: ' +'*'+ data["Amass"] +' (–≥/–º–æ–ª—å)'+'*'+'\n–ü–ª–æ—Ç–Ω–æ—Å—Ç—å: ' + '*'+data["density"] + ' (–≥/—Å–º¬≥)'+'*'+'\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –ø–ª–∞–≤–ª–µ–Ω–∏—è: ' + '*'+data["Tmelting"] + '¬∞C' +'*'+'\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –∫–∏–ø–µ–Ω–∏—è: ' + '*'+data["boil"] + '¬∞C'+'*'
             bot.send_message(message.chat.id, text, parse_mode="MARKDOWN")
             bot.send_message(message.chat.id, '–ü–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å? —Å—Ç–∞–≤—å —Å–∞–º—É—é –≤—ã—Å–æ–∫—É—é –æ—Ü–µ–Ω–∫—É.\n–ê —Ç–∞–∫–∂–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ –Ω–∞–º!',reply_markup=keyboard,disable_web_page_preview=True)
     

bot.remove_webhook()


# Set webhook

bot.set_webhook(url=WEBHOOK_URL_BASE+WEBHOOK_URL_PATH, certificate=open(WEBHOOK_SSL_CERT, 'r'))


# Start flask server
if __name__ == '__main__':
    app.run(host=WEBHOOK_LISTEN, port=WEBHOOK_PORT, ssl_context=(WEBHOOK_SSL_CERT, WEBHOOK_SSL_PRIV), debug=True)


